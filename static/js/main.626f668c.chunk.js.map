{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Modal","props","React","createElement","className","글제목","title","날짜","따봉","Modal2","Component","constructor","super","this","state","name","age","render","onClick","setState","App","글제목변경","useState","modal","setModal","setTitle","입력값","입력값변경","map","a","i","key","e","stopPropagation","copy","role","aria-label","copyTitles","splice","onChange","target","value","placeholder","style","marginRight","padding","trim","alert","today","Date","newDate","concat","getFullYear","getMonth","getDate","newTitles","disabled","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","StrictMode"],"mappings":"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","file":"static/js/main.626f668c.chunk.js","sourcesContent":["import './App.css'; // CSS 파일을 임포트합니다.\nimport React, { useState } from 'react'; // React와 useState 훅을 임포트합니다.\n\nfunction App() {\n  // useState 훅을 사용하여 상태(state)를 정의합니다.\n  let [글제목, 글제목변경] = useState([\n    { title: '남자코트 추천', 따봉: 0, 날짜: '2023-06-25' },\n    { title: '강남 우동맛집', 따봉: 0, 날짜: '2023-06-26' },\n    { title: '파이썬독학', 따봉: 0, 날짜: '2023-06-27' }\n  ]);\n  let [modal, setModal] = useState(false);\n  let [title, setTitle] = useState(0);\n  let [입력값, 입력값변경] = useState(''); // 입력값을 저장하는 상태\n\n  function 글추가() {\n    if (입력값.trim() === '') {\n      alert('글을 입력해주세요.');\n      return;\n    }\n\n    const today = new Date();\n    const newDate = `${today.getFullYear()}-${today.getMonth() + 1}-${today.getDate()}`;\n\n    let newTitles = [...글제목, { title: 입력값, 따봉: 0, 날짜: newDate }];\n\n    글제목변경(newTitles);\n    입력값변경('');\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"black-nav\">\n        <h4>ReactBlog</h4>\n      </div>\n\n      {\n        글제목.map(function (a, i) {\n          return (\n            <div className=\"list\" key={i}>\n              <h4 onClick={() => { setModal(true); setTitle(i); }}>{a.title}\n                <span onClick={(e) => {\n                  e.stopPropagation();\n                  let copy = [...글제목];\n                  copy[i].따봉 += 1;\n                  글제목변경(copy);\n                }}> <span role=\"img\" aria-label=\"thumbs up\">👍</span></span> {a.따봉}</h4>\n              <p>{a.날짜} 발행</p>\n              <button onClick={() => {\n                let copyTitles = [...글제목];\n\n                copyTitles.splice(i, 1);\n\n                글제목변경(copyTitles);\n              }}>삭제</button>\n            </div>\n          )\n        })\n      }\n\n      <input\n        onChange={(e) => { 입력값변경(e.target.value) }}\n        value={입력값}\n        placeholder=\"새 글 제목\"\n        style={{ marginRight: '10px', padding: '5px' }}\n      />\n      <button onClick={글추가} disabled={입력값.trim() === ''}>글발행</button>\n\n\n      {\n        modal === true ? <Modal 글제목={글제목} title={title}></Modal> : null\n      }\n\n      <Modal2 />\n    </div>\n  );\n}\n\n// Modal 컴포넌트\nfunction Modal(props) {\n  return (\n    <div className=\"modal\">\n      <h4>{props.글제목[props.title].title}</h4>\n      <p>{props.글제목[props.title].날짜} 발행</p>\n      <p>상세내용</p>\n      <p>따봉 수: {props.글제목[props.title].따봉}</p>\n      <button>글수정</button>\n    </div>\n  );\n}\n\n// 클래스형 컴포넌트 Modal2\nclass Modal2 extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      name: 'kim',\n      age: 20\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <div>안녕 {this.state.age}</div>\n        <button onClick={() => {\n          this.setState({ age: 21 })\n        }}>버튼</button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}